services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=livraria_ufc
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Password123#@!
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  rmi-server:
    build:
      context: ./OrderServer
      dockerfile: Dockerfile
    container_name: rmi-server
    ports:
      - "1099:1099"
    depends_on:
      - postgres
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway-jorge
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/livraria_ufc
      - SPRING_DATASOURCE_USER=postgres
      - SPRING_DATASOURCE_PASSWORD=Password123#@!
      - RMI_SERVER=server-rmi
      - RMI_PORT=1099
    ports:
      - "8080:8080"
    networks:
      - app-network

  client:
    build:
      context: ./livraria-client
      dockerfile: Dockerfile
    container_name: livraria-client
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - app-network

  notificacoes:
    build:
      context: .
      dockerfile: notificacoes/Dockerfile
    container_name: notificacoes
    ports:
      - "8765:8765"
    depends_on:
     - pagamentos
    networks:
      - app-network

  pagamentos:
    build:
      context: ./pagamento
      dockerfile: Dockerfile
    container_name: pagamentos
    ports:
      - "5000:5000"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
